#!/bin/bash

# creates an SSH key and uploads it to the given host
addsshkey()
{
	username=$1
	hostname=$2

	if [[ "$username" == "" ]] || [[ "$hostname" == "" ]]
	then
		echo "usage: addsshkey <username> <hostname>"
	else
		ssh $username@$hostname 'mkdir -p .ssh && cat >> ~/.ssh/authorized_keys' < ~/.ssh/id_rsa.pub

		tput bold; ssh -o PasswordAuthentication=no $username@$hostname true && { tput setaf 2; echo 'Success!'; } || { tput setaf 1; echo 'Failure'; }; tput sgr0
	fi
}

# adds an entry to the hosts file (with a backup)
addhost()
{
	site=$1

	if [[ "$site" == "" ]]
	then
		echo "usage: addvhost <name>"
	else
		sudo cp /etc/hosts /etc/hosts.original
		sudo sh -c "echo \"127.0.0.1\t${site}.dev\" >> /etc/hosts"
		sudo apachectl graceful
	fi
}

# toggles xdebug
togglexdebug()
{
	if php -i | grep -Fq 'xdebug'
	then
		# disable
		sudo sed -i -e 's/zend_extension=\/usr\/lib\/php\/extensions\/no-debug-non-zts-20100525\/xdebug.so/\;zend_extension=\/usr\/lib\/php\/extensions\/no-debug-non-zts-20100525\/xdebug.so/g' /etc/php.ini
	else
		#enable
		sudo sed -i -e 's/\;zend_extension=\/usr\/lib\/php\/extensions\/no-debug-non-zts-20100525\/xdebug.so/zend_extension=\/usr\/lib\/php\/extensions\/no-debug-non-zts-20100525\/xdebug.so/g' /etc/php.ini
	fi
	sudo apachectl restart
}

# serialize
serialize()
{
	var=$1

	if [[ "$var" == "" ]]
	then
		echo "usage: serialize <variable>"
	else
		output=`php -r "echo serialize($1);"`
		echo -n $output | pbcopy
		echo $output
	fi
}

# random password generator
passgen()
{
	length=$1
	pass=""

	if [[ "$length" == "" ]]
	then
		echo "usage: passgen <length>"
	else
		charArray=( 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 'u' 'v' 'w' 'x' 'y' 'z' 'A' 'B' 'C' 'D' 'E' 'F' 'G' 'H' 'I' 'J' 'K' 'L' 'M' 'N' 'O' 'P' 'Q' 'R' 'S' 'T' 'U' 'V' 'W' 'X' 'Y' 'Z' )
		numArray=( 0 1 2 3 4 5 6 7 8 9 )
		specialArray=( "!" "@" "#" "$" "%" "*" "[" "]" ";" "?" "(" ")" )

		for (( x=0;x<$length;x++ )); do
			# This could be changed to RANDOM%3 to get special characters.
			type=$((RANDOM%2))
			if [ $type -eq 0 ]; then
				char=$((RANDOM%52))
				newChar=${charArray[$char]}
			elif [ $type -eq 1 ]; then
				char=$((RANDOM%10))
				newChar=${numArray[$char]}
			elif [ $type -eq 2 ]; then
				char=$((RANDOM%12))
				newChar=${specialArray[$char]}
			fi
			pass=$pass$newChar
		done

		echo -n $pass | pbcopy
		echo $pass
	fi
}

# creates database with a user
createdb()
{
	EXPECTED_ARGS=3
	E_BADARGS=65
	MYSQL=`which mysql`

	Q1="CREATE DATABASE IF NOT EXISTS $1;"
	Q2="GRANT ALL ON *.* TO '$2'@'localhost' IDENTIFIED BY '$3';"
	Q3="FLUSH PRIVILEGES;"
	SQL="${Q1}${Q2}${Q3}"

	if [ $# -ne $EXPECTED_ARGS ]
	then
		echo "Usage: createdb <dbname> <dbuser> <dbpass>"
	else
		$MYSQL -uroot -p -e "$SQL"
	fi
}

# creates a new gitignore file that ignores everything except the gitignore file itself
add_gitignore()
{
	directory=$1

	if [[ "$directory" == "" ]]
	then
		directory="."
	fi

	echo -e "*\n!.gitignore" >> "${PWD}/$directory/.gitignore"
}

install_precommit()
{
	curl -O https://raw.githubusercontent.com/WouterSioen/pre-commit/master/pre-commit
	mv pre-commit .git/hooks/pre-commit
	chmod +x .git/hooks/pre-commit
}

# Does some sneakers stuff
sneakers()
{
	cd ~/Tools/sneakers
	vagrant $*
	cd - > /dev/null
}
