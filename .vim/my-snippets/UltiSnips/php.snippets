priority 1

snippet class "Class declaration template" b
<?php

namespace ${3}${1:`!p
relpath = os.path.relpath(path)
m = re.search(r'[A-Z].+(?=/)', relpath)
if m:
	snip.rv = m.group().replace('/', '\\')
`};

${2:final }class ${1:`!p snip.rv=snip.basename`}
{
    ${4}
}
endsnippet

snippet getter "PHP Class Getter" b
/**
 * @return ${2:string}
 */
public function get${1/\w+\s*/\u$0/}()
{
    return $this->$1;$3
}
endsnippet

snippet phpunit "PHPUnit test class" b
<?php

namespace ${3}${1:`!p
relpath = os.path.relpath(path)
m = re.search(r'[A-Z].+(?=/)', relpath)
if m:
	snip.rv = m.group().replace('/', '\\')
`};

use PHPUnit\Framework\TestCase;

${2:final }class ${1:`!p snip.rv=snip.basename`} extends TestCase
{
    ${4}
}
endsnippet

snippet construct "__construct()" b
/**
 * @param$2 ${1/, /\n     * \@param /g}
 */
public function __construct(${1:$dependencies})
{${1/\w* ?\$(\w+)(, )*/\n        $this->$1 = $$1;/g}
}
$0
endsnippet
